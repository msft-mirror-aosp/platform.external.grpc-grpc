package {
    default_applicable_licenses: ["external_grpc-grpc_third_party_upb_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_grpc-grpc_third_party_upb_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-BSD-3-Clause",
    ],
    license_text: [
        "LICENSE",
    ],
}

cc_library_static {
    name: "libgrpc_third_party_upb",
    defaults: ["grpc_deps_defaults"],
    srcs: [
        "cmake/google/protobuf/descriptor.upb.c",
        "third_party/utf8_range/naive.c",
        "third_party/utf8_range/range2-neon.c",
        "third_party/utf8_range/range2-sse.c",
        "upb/decode.c",
        "upb/decode_fast.c",
        "upb/def.c",
        "upb/encode.c",
        "upb/json_decode.c",
        "upb/json_encode.c",
        "upb/msg.c",
        "upb/reflection.c",
        "upb/table.c",
        "upb/text_encode.c",
        "upb/upb.c",
    ],
    cflags: [
        "-Wno-unused-parameter",
    ],
    export_include_dirs: [
        ".",
        "cmake",
    ],
}
